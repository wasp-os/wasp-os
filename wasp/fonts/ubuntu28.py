# Code generated by font_to_py.py.
# Font: Ubuntu-Regular.ttf Char set: +-0123456789:
# Cmd: tools/micropython-font-to-py/font_to_py.py /tmp/ttf/Ubuntu-Regular.ttf --xmap 28 -e 58 -c 0123456789:+- wasp/fonts/ubuntu28.py
version = '0.33'

def height():
    return 28

def baseline():
    return 28

def max_width():
    return 23

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 43

def max_ch():
    return 58

_font =\
b'\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x1c\x00\x3e\x00\x3e\x00\x3e\x00\x1c\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x1c\x00\x3e\x00\x3e\x00\x3e\x00\x1c\x00\x17\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x38\x00\x00\x38\x00\x00\x38\x00\x00\x38\x00\x00\x38\x00'\
b'\x00\x38\x00\x00\x38\x00\x00\x38\x00\x3f\xff\xf8\x3f\xff\xf8\x3f'\
b'\xff\xf8\x00\x38\x00\x00\x38\x00\x00\x38\x00\x00\x38\x00\x00\x38'\
b'\x00\x00\x38\x00\x00\x38\x00\x00\x38\x00\x00\x00\x00\x00\x00\x00'\
b'\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x7f\xe0\x7f\xe0\x7f\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\xfe\x00\x01'\
b'\xff\x00\x07\xff\xc0\x07\x83\xc0\x0f\x01\xe0\x1f\x01\xf0\x1e\x00'\
b'\xf0\x1e\x00\xf0\x1c\x00\x70\x3c\x00\x78\x3c\x00\x78\x3c\x00\x78'\
b'\x3c\x00\x78\x3c\x00\x78\x3c\x00\x78\x3c\x00\x78\x3c\x00\x78\x3c'\
b'\x00\x78\x3c\x00\x78\x1c\x00\xf0\x1e\x00\xf0\x1e\x00\xf0\x1f\x01'\
b'\xf0\x0f\x01\xe0\x07\x83\xc0\x07\xff\xc0\x01\xff\x00\x00\xfe\x00'\
b'\x17\x00\x00\x0e\x00\x00\x1e\x00\x00\x3e\x00\x00\xfe\x00\x01\xfe'\
b'\x00\x07\xfe\x00\x0f\xde\x00\x07\x1e\x00\x04\x1e\x00\x00\x1e\x00'\
b'\x00\x1e\x00\x00\x1e\x00\x00\x1e\x00\x00\x1e\x00\x00\x1e\x00\x00'\
b'\x1e\x00\x00\x1e\x00\x00\x1e\x00\x00\x1e\x00\x00\x1e\x00\x00\x1e'\
b'\x00\x00\x1e\x00\x00\x1e\x00\x00\x1e\x00\x00\x1e\x00\x00\x1e\x00'\
b'\x00\x1e\x00\x00\x1e\x00\x17\x00\x01\xfc\x00\x0f\xff\x00\x1f\xff'\
b'\x80\x3e\x07\xc0\x18\x03\xc0\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0'\
b'\x00\x01\xe0\x00\x01\xe0\x00\x03\xc0\x00\x03\xc0\x00\x07\xc0\x00'\
b'\x0f\x80\x00\x1f\x00\x00\x3e\x00\x00\x7c\x00\x00\xf8\x00\x01\xf0'\
b'\x00\x03\xe0\x00\x07\xc0\x00\x07\x80\x00\x0f\x00\x00\x0f\x00\x00'\
b'\x1e\x00\x00\x1f\xff\xf0\x1f\xff\xf0\x1f\xff\xf0\x17\x00\x01\xfc'\
b'\x00\x0f\xff\x00\x1f\xff\x80\x0e\x07\xc0\x08\x03\xe0\x00\x01\xe0'\
b'\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0\x00\x03\xc0\x00\x03\xc0\x00'\
b'\x0f\x80\x01\xfe\x00\x01\xfe\x00\x01\xff\x80\x00\x0f\xc0\x00\x03'\
b'\xe0\x00\x01\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0'\
b'\x00\x01\xf0\x00\x01\xe0\x38\x07\xe0\x3f\xff\xc0\x3f\xff\x00\x07'\
b'\xf8\x00\x17\x00\x00\x03\xc0\x00\x07\xc0\x00\x0f\xc0\x00\x1f\xc0'\
b'\x00\x3f\xc0\x00\x7f\xc0\x00\x7b\xc0\x00\xf3\xc0\x01\xe3\xc0\x01'\
b'\xe3\xc0\x03\xc3\xc0\x03\x83\xc0\x07\x83\xc0\x0f\x03\xc0\x0f\x03'\
b'\xc0\x1e\x03\xc0\x1e\x03\xc0\x3c\x03\xc0\x3f\xff\xf8\x3f\xff\xf8'\
b'\x3f\xff\xf8\x00\x03\xc0\x00\x03\xc0\x00\x03\xc0\x00\x03\xc0\x00'\
b'\x03\xc0\x00\x03\xc0\x00\x03\xc0\x17\x00\x03\xff\xe0\x03\xff\xe0'\
b'\x03\xff\xe0\x03\xc0\x00\x03\xc0\x00\x03\xc0\x00\x03\x80\x00\x03'\
b'\x80\x00\x07\x80\x00\x07\x80\x00\x07\x80\x00\x07\xf8\x00\x07\xff'\
b'\x00\x07\xff\x80\x00\x1f\xc0\x00\x07\xe0\x00\x01\xe0\x00\x01\xf0'\
b'\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x01\xf0\x00'\
b'\x01\xe0\x1c\x07\xe0\x1f\xff\xc0\x1f\xff\x00\x03\xfc\x00\x17\x00'\
b'\x00\x03\xe0\x00\x1f\xe0\x00\x7f\xe0\x00\xfe\x00\x01\xf0\x00\x03'\
b'\xe0\x00\x07\xc0\x00\x07\x80\x00\x0f\x80\x00\x0f\x00\x00\x0f\x00'\
b'\x00\x1f\x7f\x00\x1f\xff\xc0\x1f\xff\xe0\x1f\x83\xf0\x1e\x00\xf0'\
b'\x1e\x00\xf8\x1e\x00\x78\x1e\x00\x78\x1e\x00\x78\x1e\x00\x78\x0f'\
b'\x00\x78\x0f\x00\xf0\x0f\x80\xf0\x07\xc3\xe0\x03\xff\xe0\x01\xff'\
b'\x80\x00\x7e\x00\x17\x00\x3f\xff\xf0\x3f\xff\xf0\x3f\xff\xf0\x00'\
b'\x00\xe0\x00\x01\xe0\x00\x03\xc0\x00\x07\x80\x00\x07\x80\x00\x0f'\
b'\x00\x00\x0f\x00\x00\x1e\x00\x00\x1e\x00\x00\x3c\x00\x00\x3c\x00'\
b'\x00\x78\x00\x00\x78\x00\x00\x78\x00\x00\xf0\x00\x00\xf0\x00\x00'\
b'\xf0\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0\x00\x03\xc0'\
b'\x00\x03\xc0\x00\x03\xc0\x00\x03\xc0\x00\x17\x00\x00\xfe\x00\x03'\
b'\xff\x80\x07\xff\xc0\x0f\x83\xe0\x0f\x01\xf0\x1e\x00\xf0\x1e\x00'\
b'\xf0\x1e\x00\xf0\x1f\x00\xf0\x1f\x01\xe0\x0f\xc3\xe0\x0f\xf7\xc0'\
b'\x07\xff\x80\x01\xff\x00\x07\xff\xc0\x0f\x9f\xe0\x1f\x07\xf0\x1e'\
b'\x01\xf0\x3c\x00\xf8\x3c\x00\x78\x3c\x00\x78\x3c\x00\x78\x3c\x00'\
b'\x78\x1e\x00\xf0\x1f\x83\xf0\x0f\xff\xe0\x07\xff\xc0\x00\xfe\x00'\
b'\x17\x00\x00\xfc\x00\x03\xff\x00\x0f\xff\x80\x0f\x87\xc0\x1e\x03'\
b'\xe0\x1e\x01\xe0\x3c\x01\xe0\x3c\x00\xf0\x3c\x00\xf0\x3c\x00\xf0'\
b'\x3c\x00\xf0\x3e\x00\xf0\x1e\x00\xf0\x1f\x81\xf0\x0f\xff\xf0\x07'\
b'\xff\xf0\x01\xfd\xf0\x00\x01\xe0\x00\x01\xe0\x00\x03\xe0\x00\x03'\
b'\xc0\x00\x07\xc0\x00\x0f\x80\x00\x1f\x00\x00\xfe\x00\x0f\xfc\x00'\
b'\x0f\xf0\x00\x0f\x80\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x1c\x00\x3e\x00\x3e\x00\x3e\x00\x1c\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x1c\x00\x3e\x00\x3e\x00\x3e\x00\x1c\x00'\

_index =\
b'\x00\x00\x3a\x00\x00\x00\x90\x00\x00\x00\x00\x00\xca\x00\x20\x01'\
b'\x76\x01\xcc\x01\x22\x02\x78\x02\xce\x02\x24\x03\x7a\x03\xd0\x03'\
b'\x26\x04\x60\x04'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 43 + 1) if oc >= 43 and oc <= 58 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 28
    return _mvfont[doff + 2:next_offs], 28, width
 
