name: wasp-os

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt-get update -y && sudo apt-get install git build-essential
          libsdl2-2.0.0 python3-click python3-numpy python3-pexpect python3-pil python3-pip python3-serial
      - name: Install Python dependencies
        run: pip3 install --user pysdl2
      - name: Download toolchain
        run: curl -o gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.bz2 -O https://developer.arm.com/-/media/Files/downloads/gnu-rm/9-2019q4/gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.bz2?revision=108bd959-44bd-4619-9c19-26187abf5225&la=en&hash=E788CE92E5DFD64B2A8C246BBA91A249CB8E2D2D
      - name: Setup toolchain
        run: tar xvzf gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.bz2 &&
          echo "export PATH=$PATH:$(eval pwd)/gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux/gcc-arm-none-eabi-9-2019-q4-major/bin" >> ~/.bashrc &&
          source ~/.bashrc
      - name: Checkout wasp-os
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build dependencies
        run: make submodules && make softdevice
      - name: Build firmware
        run: make -j `nproc` BOARD=p8 all
      - name: Persist bootloader
        uses: actions/upload-artifact@v2
        with:
          name: bootloader-daflasher
          path: bootloader-daflasher.zip
      - name: Persist micropython
        uses: actions/upload-artifact@v2
        with:
          name: micropython
          path: micropython.zip
